#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps
set -o errexit    # always exit on error
set -o nounset    # fail on unset variables

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

#Get environment variables
VCO_BACKUPS_ACCESS_KEY_ID=$(cat $ENV_DIR/VCO_BACKUPS_ACCESS_KEY_ID)
VCO_BACKUPS_SECRET_ACCESS_KEY=$(cat $ENV_DIR/VCO_BACKUPS_SECRET_ACCESS_KEY)
VCO_BACKUPS_REGION=$(cat $ENV_DIR/VCO_BACKUPS_REGION)
VCO_BACKUPS_BUCKET_NAME=$(cat $ENV_DIR/VCO_BACKUPS_BUCKET_NAME)
VCO_BACKUPS_APP_NAME=$(cat $ENV_DIR/VCO_BACKUPS_APP_NAME)

#install aws-cli
curl https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip
unzip awscli-bundle.zip
chmod +x ./awscli-bundle/install
./awscli-bundle/install -i /tmp/aws

#set backup date 
dt=$(date '+%Y-%m-%dT%H:%M:%S');

#configure aws cli
/tmp/aws/bin/aws configure set aws_access_key_id $VCO_BACKUPS_ACCESS_KEY_ID
/tmp/aws/bin/aws configure set aws_secret_access_key $VCO_BACKUPS_SECRET_ACCESS_KEY
/tmp/aws/bin/aws configure set region $VCO_BACKUPS_REGION


echo "-----> backing up to s3 ... "

#compress actual code
tar -cvzPf /tmp/backup.tgz $BUILD_DIR > /dev/null

#send code to s3
#/tmp/aws/bin/aws s3 cp /tmp/backup.tgz s3://$VCO_BACKUPS_BUCKET_NAME/$VCO_BACKUPS_APP_NAME/$dt.tgz --sse

/tmp/aws/bin/aws glacier upload-archive --archive-description $VCO_BACKUPS_APP_NAME-$dt 
																			  --account-id -  \
																			  --vault-name backup-vault \
																			  --body /tmp/backup.tgz 

exit 1








