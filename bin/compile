#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps
set -o errexit    # always exit on error
set -o nounset    # fail on unset variables

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
LOG_FILE='/tmp/node-build-log.txt'


# export_env_dir() {
#   env_dir=$1
#   whitelist_regex=${2:-''}
#   blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
#   if [ -d "$env_dir" ]; then
#     for e in $(ls $env_dir); do
#       echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
#       export "$e=$(cat $env_dir/$e)"
#       :
#     done
#   fi
# }

# export_env_dir ENV_DIR

#install aws-cli
curl https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip
unzip awscli-bundle.zip
chmod +x ./awscli-bundle/install
./awscli-bundle/install -i /tmp/aws


/tmp/aws/bin/aws --version

VCO_BACKUPS_ACCESS_KEY_ID=$(cat $ENV_DIR/VCO_BACKUPS_ACCESS_KEY_ID)
VCO_BACKUPS_SECRET_ACCESS_KEY=$(cat $ENV_DIR/VCO_BACKUPS_SECRET_ACCESS_KEY)
VCO_BACKUPS_REGION=$(cat $ENV_DIR/VCO_BACKUPS_REGION)

/tmp/aws/bin/aws configure set aws_access_key_id $VCO_BACKUPS_ACCESS_KEY_ID
/tmp/aws/bin/aws configure set aws_secret_access_key $VCO_BACKUPS_SECRET_ACCESS_KEY
/tmp/aws/bin/aws configure set region $VCO_BACKUPS_REGION

#mkdir ~/.aws

#cat >> ~/.aws/credentials << EOF
#[default]
#aws_access_key_id = $VCO_BACKUPS_ACCESS_KEY_ID
#aws_secret_access_key = $VCO_BACKUPS_SECRET_ACCESS_KEY
#EOF

# cat >> ~/.aws/credentials << EOF
# [default]
# aws_access_key_id = "\$VCO_BACKUPS_ACCESS_KEY_ID"
# aws_secret_access_key = "\$VCO_BACKUPS_SECRET_ACCESS_KEY"
# EOF

# cat >> ~/.aws/config << EOF 
# [default]
# region = \$VCO_BACKUPS_REGION
# EOF


cat ~/.aws/credentials

/tmp/aws/bin/aws s3 ls







# echo "-----> backing up to s3 ... "

# #compress actual code
# tar -cvzPf /tmp/backup.tgz $1 > /dev/null
# mkdir ${BUILD_DIR}/backup
# mv /tmp/backup.tgz ${BUILD_DIR}/backup/

# ### Load dependencies
# source ${BP_DIR}/lib/output.sh

# ### Install node dependencies
# npm install | output "$LOG_FILE"

# BUILD_DIR=${BUILD_DIR} \
# CACHE_DIR=${CACHE_DIR} \
# ENV_DIR=${ENV_DIR} \
# SOURCE_VERSION=${SOURCE_VERSION} \
# node ${BP_DIR}/lib/upload.js | output "$LOG_FILE" 

exit 1








