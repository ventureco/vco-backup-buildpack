#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -e
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps
set -o errexit    # always exit on error
set -o nounset    # fail on unset variables

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
LOG_FILE='/tmp/node-build-log.txt'


# config
AWS_CLI_URL="https://s3.amazonaws.com/aws-cli/awscli-bundle.zip"

LP_DIR=`cd $(dirname $0); cd ..; pwd`
BUILDPACK_DIR="$(dirname $(dirname $0))"

echo "-----> Fetching AWS CLI into slug"
curl --progress-bar -o /tmp/awscli-bundle.zip $AWS_CLI_URL
unzip -qq -d "$BUILD_DIR/vendor" /tmp/awscli-bundle.zip

echo "-----> adding installer script into app/.profile.d"
mkdir -p $BUILD_DIR/.profile.d
cp "$BUILDPACK_DIR/bin/install_awscli.sh" $BUILD_DIR/.profile.d/
chmod +x $BUILD_DIR/.profile.d/install_awscli.sh

#cleaning up...
rm -rf /tmp/awscli*

/app/vendor/awscli/bin/aws help




# echo "-----> backing up to s3 ... "

# #compress actual code
# tar -cvzPf /tmp/backup.tgz $1 > /dev/null
# mkdir ${BUILD_DIR}/backup
# mv /tmp/backup.tgz ${BUILD_DIR}/backup/

# ### Load dependencies
# source ${BP_DIR}/lib/output.sh

# ### Install node dependencies
# npm install | output "$LOG_FILE"

# BUILD_DIR=${BUILD_DIR} \
# CACHE_DIR=${CACHE_DIR} \
# ENV_DIR=${ENV_DIR} \
# SOURCE_VERSION=${SOURCE_VERSION} \
# node ${BP_DIR}/lib/upload.js | output "$LOG_FILE" 

exit 1








